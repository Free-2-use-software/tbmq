/**
 * Copyright Â© 2016-2020 The Thingsboard Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
package queue;

option java_package = "org.thingsboard.mqtt.broker.gen.queue";
option java_outer_classname = "QueueProtos";

message SessionInfoProto {
  ServiceInfo serviceInfo = 1;
  int64 sessionIdMSB = 2;
  int64 sessionIdLSB = 3;
  ClientInfoProto clientInfo = 4;
  bool persistent = 5;
}

message PublishMsgProto {
  SessionInfoProto sessionInfo = 1;
  int32 packetId = 2;
  bytes payload = 3;
  bool retain = 4;
  int32 qos = 5;
  string topicName = 6;
}

message TopicSubscriptionProto {
  string topic = 1;
  int32  qos = 2;
}

message ClientInfoProto {
  string clientId = 1;
  string clientType = 2;
}

message ClientSessionInfoProto {
  bool connected = 1;
  SessionInfoProto sessionInfo = 2;
  int64 lastUpdatedTime = 3;
}

// TODO: think if we can use 'oneof'
message ClientSessionEventProto {
  string eventType = 1;
  SessionInfoProto sessionInfo = 2;
}

message ClientSessionEventResponseProto {
  bool success = 1;
}

message ClientSubscriptionsProto {
  repeated TopicSubscriptionProto subscriptions = 1;
}

message LastPublishCtxProto {
  int32 packetId = 1;
}

message DisconnectClientCommandProto {
  int64 sessionIdMSB = 1;
  int64 sessionIdLSB = 2;
}

message TimeProto {
  int64 timestamp = 1;
}

message DevicePublishMsgProto {
  string clientId = 1;
  PublishMsgProto msg = 2;
}

/**
 * Service Discovery Data Structures;
 */
message ServiceInfo {
  string serviceId = 1;
}